name: Process Story Submission

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:

jobs:
  process-submission:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse issue and update stories.json
        if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'story-submission'))
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Get all issues with story-submission label
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'story-submission',
              state: 'all'
            });

            const stories = [];

            for (const issue of issues.data) {
              const body = issue.body;
              if (!body) continue;

              // Parse the issue body to extract story details
              const storyNameMatch = body.match(/### Story Name\s*\n\s*(.+)/);
              const typesetterMatch = body.match(/### Typesetter Name\s*\n\s*(.+)/);
              const urlMatch = body.match(/### Story URL\s*\n\s*(.+)/);

              if (storyNameMatch && typesetterMatch && urlMatch) {
                stories.push({
                  name: storyNameMatch[1].trim(),
                  typesetter: typesetterMatch[1].trim(),
                  link: urlMatch[1].trim()
                });
              }
            }

            // Rewrite entire stories.json
            const storiesData = { stories };
            fs.writeFileSync('stories.json', JSON.stringify(storiesData, null, 2) + '\n');

            console.log(`Rebuilt stories.json with ${stories.length} stories`);

      - name: Commit changes
        if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'story-submission'))
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add stories.json
          git commit -m "Add new story: ${{ github.event.issue.title }}" || exit 0
          git push

      - name: Add comment to issue
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'story-submission')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… Story has been successfully added to the collection!'
            });